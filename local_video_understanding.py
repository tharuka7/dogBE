"""## Setup API key"""

import os
from dotenv import load_dotenv
from google import genai
from google.genai import types
import json
from PIL import Image
import time

# Load environment variables from .env file
load_dotenv()

# Access the API key
GOOGLE_API_KEY = os.getenv("API_KEY")
if GOOGLE_API_KEY:
    print(f"API Key loaded (first 5 chars): {GOOGLE_API_KEY[:5]}...")
else:
    print("Error: API Key not found in environment variables!")
    exit() # Stop if key isn't found

"""## Initialize SDK client"""
client = genai.Client(api_key=GOOGLE_API_KEY)


"""## Select the Gemini model

Video understanding works best with Gemini 2.5 pro model. 
Official model comparison:
https://deepmind.google/technologies/gemini/pro/
"""

model_name = "gemini-2.5-pro-exp-03-25" #["gemini-1.5-flash-latest","gemini-2.0-flash-lite","gemini-2.0-flash","gemini-2.5-pro-exp-03-25"] {"allow-input":true, isTemplate: true}

def upload_video(video_file_name):
    video_file = client.files.upload(file=video_file_name)

    while video_file.state == "PROCESSING":
        print('Waiting for video to be processed.')
        time.sleep(10)
        video_file = client.files.get(name=video_file.name)

    if video_file.state == "FAILED":
        raise ValueError(video_file.state)
    print(f'Video processing complete: ' + video_file.uri)

    return video_file

def analyze_local_video(prompt: str, path_to_video: str, client: genai.Client, model: str) -> str:
    """
    Analyzes a local video using the Gemini API with a custom prompt.

    Args:
        prompt: The text prompt/instructions for the AI model.
        path_to_video: The local path to the video file.
        client: The initialized google.genai.Client instance.
        model: The name of the Gemini model to use.

    Returns:
        The text response generated by the Gemini model, or an error message.

    Raises:
        # Catches general exceptions, specific API errors might be handled differently.
        Exception: If the API call fails for reasons other than generation blocking.
    """
    print(f"Attempting to analyze local video: {path_to_video}")
    print(f"Using Model: {model}")

    try:
        video_to_process = upload_video(path_to_video)

        print(f'video to process: {video_to_process}')
        print(f'video to process(name): {video_to_process.name}')
        
        response = client.models.generate_content(
            model="gemini-2.5-pro-exp-03-25",
            contents=[video_to_process, my_custom_prompt]
        )
        

        # Check if the response has text (it might be blocked)
        if hasattr(response, 'text'):
             print("Analysis successful.")
             return response.text
        else:
             # Handle cases where the response might be empty or blocked
             print("Warning: Response did not contain text. It might have been blocked.")
             # You might want to inspect response.prompt_feedback or other attributes
             return f"Analysis generated no text output. Response details: {response}"


    except Exception as e:
        # Handle potential errors during the API call
        print(f"An error occurred during Gemini API call: {e}")
        # You might want to log the full exception traceback here
        # import traceback
        # traceback.print_exc()
        return f"Error analyzing video: {e}"

##########################################################################################
##########################################################################################

# --- Example Usage ---

if 'client' in locals() and 'model_name' in locals():

    # Define your custom prompt and video URL

    my_custom_prompt = """
**Role:** You are an AI assistant specialized in analyzing animal behavior from video footage. You are tasked with identifying behavioral signs potentially associated with neurological conditions like rabies in dogs, based *only* on the visual information provided. You are NOT a veterinarian and cannot provide a diagnosis.

**Task:** Analyze the provided video clip of a dog. Identify any behaviors exhibited that are commonly listed as potential symptoms of rabies. Based *solely* on the observed behaviors in the video, assess a *potential risk level* (Low, Medium, High) that these behaviors *could be consistent* with rabies symptoms. Provide a concise explanation for your assessment, referencing specific visual evidence.

**Input:** A video clip showing a dog's behavior.

**Analysis Guidelines:**
1.  **Observe Behaviors:** Carefully watch the dog's actions, movements, posture, and any audible sounds if discernible.
2.  **Identify Potential Signs:** Look specifically for behaviors such as:
    *   Unprovoked aggression or unusual irritability
    *   Excessive drooling or foaming at the mouth (hypersalivation)
    *   Difficulty swallowing (dysphagia)
    *   Strange vocalizations (unusual barking, howling, whining)
    *   Stumbling, incoordination, weakness, or paralysis (especially in the hind legs)
    *   Disorientation, confusion, or vacant staring
    *   Restlessness, pacing, or agitation
    *   Seizures
    *   Jaw dropping or facial paralysis
    *   Aversion to water (hydrophobia - rare to capture clearly on video but note any related behavior)
    *   Self-mutilation (biting/chewing at limbs)
3.  **Assess Risk Level:** Based on the presence, combination, and severity of the *observed signs only*:
    *   **Low Risk:** No specific rabies-associated signs observed, or behavior appears normal/explainable by context (e.g., playful barking, normal tiredness).
    *   **Medium Risk:** One or two potential signs observed, but they could also have other causes (e.g., some agitation, slight incoordination that could be an injury). The behavior warrants caution.
    *   **High Risk:** Multiple significant signs strongly associated with rabies are clearly visible (e.g., unprovoked aggression combined with facial paralysis and hypersalivation; severe disorientation with seizures).
4.  **Explain Your Reasoning:** Briefly describe *which specific behaviors* (or lack thereof) led to your risk assessment. Be factual and refer only to what is visible in the video.
5.  **Mandatory Disclaimer:** ALWAYS conclude your explanation with: "Disclaimer: This analysis is based solely on the provided video and is NOT a veterinary diagnosis. Rabies is a serious condition. If you have any concerns about this animal's health or behavior, consult a qualified veterinarian immediately."

**Output Format:** Please provide the response in JSON format with the following keys:
*   `risk_level`: (String: "Low", "Medium", or "High")
*   `explanation`: (String: Your detailed explanation, including the mandatory disclaimer)
*   `observed_signs`: (List of Strings: Specific potential signs observed, e.g., ["Unprovoked aggression", "Hypersalivation"])

**Example Video Input:** [Video Data or Reference to Video Data will be provided here by the API call]
"""

    path = 'dog.mp4'

    # Call the function
    analysis_result = analyze_local_video(
        prompt=my_custom_prompt,
        path_to_video=path,
        client=client,
        model=model_name
    )

    # Display the result using Markdown
    print("\n--- Analysis Result ---")
    if analysis_result.startswith("Error"):
        print(analysis_result) # Print error messages directly
    else:
        print(analysis_result)

else:
    print("Error: Please ensure 'client' (genai.Client) and 'model_name' are defined.")
